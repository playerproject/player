SUBDIRS = drivers

AM_CPPFLAGS = -Wall @GAZEBO_EXTRA_CPPFLAGS@ -I$(srcdir)/drivers/stage -I$(srcdir)/drivers/gazebo -I$(srcdir)/drivers/shell -I$(top_srcdir)/replace

# create the pkg-config entry for the server headers
pkgconfigdir = $(libdir)/pkgconfig
pkgconfig_DATA = player.pc

player_DEPENDENCIES =   @PLAYER_DRIVER_LIBPATHS@

#
# Note to everybody: please do NOT break the following assignment onto
# separate lines with backslashes.  It makes the link line look like shit and 
# hard to parse.  - BPG
#
player_LDADD   = -lm @PLAYER_DRIVER_LIBPATHS@ $(top_builddir)/client_libs/libplayerpacket/libplayerpacket.a @PLAYER_DRIVER_EXTRA_LIBS@ @RTK_LIBS@ $(top_builddir)/replace/libreplace.a 

player_LDFLAGS = -Wl -export-dynamic


bin_PROGRAMS = player


lib_LIBRARIES = libplayerqueue.a

libplayerqueue_a_SOURCES = playerqueue.cc

player_SOURCES = clientdata.cc socket_util.cc driver.cc driver.h \
                 device.cc device.h drivertable.cc drivertable.h \
								 devicetable.cc devicetable.h deviceregistry.cc \
								 deviceregistry.h clientmanager.cc wallclocktime.cc main.cc \
                 playerqueue.cc configfile.cc playercommon.h \
                 player.h playerconfig.h playerqueue.h  \
                 clientdata.h clientmanager.h socket_util.h \
                 wallclocktime.h playertime.h configfile.h \
								 timer.cc timer.h error.cc error.h


# Install these to $prefix/include so clients and plugins can use them
include_HEADERS = player.h playerconfig.h playercommon.h playerqueue.h 

# Install these to $prefix/include/player/ so plugin drivers can use them
pkginclude_HEADERS = driver.h drivertable.h devicetable.h device.h configfile.h playertime.h error.h


#
# distribute playerconfig.h.in, but NOT playerconfig.h, which is autogenerated
# by configure.  In later versions of Automake, you can use a
# nodist_player_SOURCES, but that doesn't work with the version we're using.
#
EXTRA_DIST = playerconfig.h.in #prefix.h.in

dist-hook:
	rm -f $(distdir)/playerconfig.h #$(distdir)/prefix.h


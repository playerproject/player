SUBDIRS = drivers

AM_CPPFLAGS = -Wall -I$(srcdir)/drivers/stage -I$(top_builddir)/replace

player_DEPENDENCIES =   @PLAYER_DRIVER_LIBPATHS@ \
			$(top_builddir)/replace/libreplace.a \
			drivers/stage/libpsdevice.a


#@LIBOBJS@

#
# Note to everybody: please do NOT break the following assignment onto
# separate lines with backslashes.  It makes the link line look like shit and 
# hard to parse.  - BPG
#
player_LDADD   = -lm @PLAYER_DRIVER_LIBPATHS@ @PLAYER_DRIVER_EXTRA_LIBS@ @RTKGUI_EXTRA_LIB@ $(top_builddir)/replace/libreplace.a drivers/stage/libpsdevice.a

player_LDFLAGS = @RTKGUI_EXTRA_LDFLAGS@


#@LIBOBJS@

bin_PROGRAMS = player


lib_LIBRARIES = libplayerqueue.a 

libplayerqueue_a_SOURCES = playerqueue.cc

player_SOURCES = clientdata.cc socket_util.cc devicetable.cc device.cc \
                 deviceregistry.cc clientmanager.cc wallclocktime.cc main.cc \
                 playerqueue.cc configfile.cc playercommon.h \
                 player.h playerqueue.h device.h deviceregistry.h \
                 devicetable.h clientdata.h clientmanager.h socket_util.h \
                 wallclocktime.h playertime.h configfile.h drivertable.cc \
                 drivertable.h


include_HEADERS = playercommon.h \
                  player.h \
                  playerqueue.h


#
# distribute playercommon.h.in, but NOT playercommon.h, which is autogenerated
# by configure.  In later versions of Automake, you can use a
# nodist_player_SOURCES, but that doesn't work with the version we're using.
#
EXTRA_DIST = playercommon.h.in

dist-hook:
	rm -f $(distdir)/playercommon.h


/* Player documentation file - parsed by Doxygen for the user
 * manual 
 * $Id$
*/

/**
@mainpage The Player Robot %Device Interface

<p>Copyright Brian Gerkey Vaughan and contributors 1999-2005.
<p>Part of the Player/Stage/Gazebo Project [http://playerstage.sourceforge.net]

\section License

<p>Player source and documentation is released under the terms of the
GNU General Public License v2. A copy of the license is included with the
sourcecode in the file 'COPYING". Copying and redistribution is permitted
only under the terms of the license.  Client libraries are simultaneously
released under the terms of the GNU Lesser General Public License v2.1.

*/

/** 
@defgroup help Getting Help

If you're having problems and you can't find what you need in this manual,
there are several places to find help.

First, please check the <a
href="http://playerstage.sourceforge.net/index.php?src=doc">online
documentation page</a> to make sure you
have the latest documentation. Also check the <a
href="http://playerstage.sourceforge.net/index.php?src=faq">online
FAQ page</a>.

Next, you should search <a
href="http://sourceforge.net/mailarchive/forum.php?forum_id=8201">the
playerstage_users mailing list archive</a> to
see if your questions have already been answered.

Next, you should probably spend a few minutes with <a
href=http://www.google.com>Google</a>. This often works well, as it
picks up P/S/G conversations from all over the place.

If you still need help, you can send email to the mailing list
playerstage_users@lists.sourceforge.net and a user or developer may
reply to you. <b>Remember that these mails go to hundreds of people</b>, so
please be polite and give as much information as you can in your
email.

For more tips and hints on getting help, look <a 
href="http://playerstage.sourceforge.net/index.php?src=faq#reporting_bugs">here</a>.

*/

/**
@defgroup install Installation

<h2>Standard install procedure</h2>

<p>To install Player in the default location (/usr/local), follow these steps:

<ol>

<li>Download the latest Player source tarball (player-\<version\>.tgz)
from <a href="http://sourceforge.net/project/showfiles.php?group_id=42445">SourceForge</a>.

<li>Uncompress and expand the tarball: <br>
    <tt>$ tar xzvf player-\<version\>.tgz</tt>

<li>`cd' into Player's source directory:<br>
     <tt>$ cd player-\<version\></tt>
 
<li>To configure Player with default settings:<br>
<tt>$ ./configure</tt><br>

<li>Compile Player:<br>
<tt>$ make</tt>

<li>Install Player. By default, Player will be installed in
<tt>/usr/local</tt> so you need to become root for this step. Remember
to return to your normal user ID afterwards. <br> 
<tt>$ make install</tt>

</ol>

<h2>Customized installations</h2>

<p>Player follows the standard GNU autotools conventions for build and
install options. To see a list of all the available configuration
options, do this:

<p><tt>./configure --help</tt>

<p>The most important option is <tt>--prefix</tt>, used
to change the installation directory from the default (which varies
from system to system, but is usually <tt>/usr/local</tt>).
Prefixes must be absolute paths, i.e. a complete path starting with a '/'.

<p>For example, you might want to install Player in your home directory
because you don't have root access:

<p><tt>$./configure --prefix=/home/gerkey/ps</tt>


@todo Talk about more configure options here, like disable-alldrivers.
*/

/**
@defgroup start Quick start

@todo Write a quick start guide
*/

/** 
@defgroup libplayercore libplayercore

This C++ library defines the device driver API, the message queues used to
move messages between devices, facilities for parsing configuration files
and for loading and instantiating drivers.

The core components of this library are:

- player.h : Defines all message formats.

- Driver : All drivers inherit from this class, and must implement certain
methods.

- Device : An instantiated driver (i.e., a driver bound to an interface) is
a device and can be accessed via a pointer of this type.  Use this class
to, for example, subscribe to a device.

- ConfigFile : Use this class to parse a configuration file

- Message : All messages are of this type

- MessageQueue : Messages are delivered on queues of this type, and every
  driver has one (Driver::InQueue).

- error.h : Error-reporting and debug output facilities.  Don't call
  directly into the stdio library (printf, puts, etc.).  Instead use the
  macros defined in error.h, so that message verbosity can be centrally
  controlled and so that all messsages get logged to .player.
*/

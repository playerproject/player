dnl Process this file with autoconf to produce a configure script.

dnl Start autoconf with this file.  Not really sure why it needs a filename.
AC_INIT(server/main.cc)

dnl Need AC_PROG_MAKE_SET for recursive building
AC_PROG_MAKE_SET

dnl Define this so that we can refer to it twice below
define(PLAYER_VERSION,1.3)

dnl Generate a configuration header called <config.h> and put all the C
dnl preprocessor defines in there
AM_CONFIG_HEADER(config.h)

dnl Initialize automake with name and version of package to be built. 
dnl PACKAGE and VERSION will be so defined in <config.h>.
AM_INIT_AUTOMAKE(player,PLAYER_VERSION)

dnl Change default installation prefix from /usr/local to user's home
AC_PREFIX_DEFAULT(${HOME}/player-PLAYER_VERSION)

dnl Checks for programs.
AC_PROG_CC
AC_PROG_CXX
AC_PROG_RANLIB
AC_PROG_INSTALL

dnl should we include the RTK GUI?
AC_ARG_WITH(gui,    [   --without-gui         Don't include the GUI],,
with_gui=yes)
if test "x$with_gui" = "xyes"; then
  AC_DEFINE(INCLUDE_RTK2,1,[include the RTK GUI])
fi
AM_CONDITIONAL(WITH_GUI, test x$with_gui = xyes)

dnl client tests are not compiled unless the user asks for them
AC_ARG_WITH(tests, [  --with-tests          Build tests],,
with_tests=no)
AM_CONDITIONAL(WITH_TESTS, test x$with_tests = xyes)

dnl use the old compiler
AC_ARG_WITH(glibc21, [  --with-glibc21          Use the GLIBC21 compilers],,
with_glibc21=no)
if test "x$with_glibc21" = "xyes"; then
  CXX=i386-glibc21-linux-g++
  CC=i386-glibc21-linux-gcc
fi

dnl check for the fftw library (by way of one of its headers) and compile
dnl the fixed tones driver if its found
AC_CHECK_HEADER(rfftw.h, 
  AC_DEFINE(INCLUDE_FIXEDTONES,1,[include the fixed tones driver])
  FIXEDTONES_LIB="libfixedtones.a"
  FIXEDTONES_LIBPATH="drivers/libfixedtones.a"
  FIXEDTONES_EXTRA_LIB="-lrfftw -lfftw",,)
AC_SUBST(FIXEDTONES_LIB)
AC_SUBST(FIXEDTONES_LIBPATH)
AC_SUBST(FIXEDTONES_EXTRA_LIB)

dnl check for Mobility (by way of one of its headers) and compile
dnl the RWI driver if it's found
AC_CHECK_HEADER(mobilitycomponents_i.h,
  AC_DEFINE(INCLUDE_RWI,1,[include the RWI driver])
  AC_DEFINE(USE_MOBILITY,1,[use the RWI Mobility interface])
  RWI_LIB="librwi.a"
  RWI_LIBPATH="drivers/rwi/librwi.a",,)
AC_SUBST(RWI_LIB)
AC_SUBST(RWI_LIBPATH)

dnl check for the isense library (by way of one of its headers) and compile
dnl the Intersense drivers if foune.
AC_CHECK_HEADER(isense/isense.h, 
  AC_DEFINE(INCLUDE_ISENSE,1,[include the InterSense driver])
  ISENSE_LIB="libisense.a"
  ISENSE_LIBPATH="drivers/isense/libisense.a"
  ISENSE_EXTRA_LIB="-lisense",,)
AC_SUBST(ISENSE_LIB)
AC_SUBST(ISENSE_LIBPATH)
AC_SUBST(ISENSE_EXTRA_LIB)

dnl Checks for header files.
#AC_HEADER_DIRENT
#AC_HEADER_STDC
#AC_CHECK_HEADERS(fcntl.h limits.h strings.h sys/file.h sys/ioctl.h sys/time.h unistd.h)

dnl Checks for typedefs, structures, and compiler characteristics.
#AC_TYPE_OFF_T
#AC_TYPE_SIZE_T
#AC_HEADER_TIME

dnl Checks for library functions.
#AC_FUNC_MMAP
#AC_FUNC_SETPGRP
#AC_TYPE_SIGNAL
#AC_CHECK_FUNCS(getcwd gethostname gettimeofday socket strdup strerror)

dnl Create the following Makefiles (from the Makefile.ams)
AC_OUTPUT(Makefile 
          server/Makefile 
          server/drivers/Makefile 
          server/drivers/p2os/Makefile 
          server/drivers/rwi/Makefile 
          server/drivers/isense/Makefile 
          server/drivers/stage/Makefile 
          client_libs/Makefile 
          client_libs/c/Makefile
          client_libs/c++/Makefile
          client_libs/c++/test/Makefile
          client_libs/libplayerc/Makefile
          client_libs/libplayerc/test/Makefile
          client_libs/tcl/Makefile
          examples/Makefile
          examples/c/Makefile
          examples/c++/Makefile
          examples/libplayerc/Makefile
          rtk2/Makefile
          utils/Makefile
          utils/playerv/Makefile
          utils/tkviewer/Makefile
          config/Makefile)






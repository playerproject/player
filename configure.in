dnl Process this file with autoconf to produce a configure script.
AC_INIT(src/main.cc)

AC_PROG_MAKE_SET
AC_PROG_INSTALL

AM_INIT_AUTOMAKE(player, 1.3)

dnl Handle --with-foo args to configure
AC_ARG_WITH(laser, [  --without-laser          Do not include laser driver],,
with_laser=yes)
if test "x$with_laser" = "xyes"; then
  LASER_OBJ="laserdevice.o"
  AC_DEFINE(INCLUDE_LASER,1,[include the laser driver])
fi
AC_SUBST(LASER_OBJ)

AC_ARG_WITH(sonar, [  --without-sonar          Do not include sonar driver],,
with_sonar=yes)
if test "x$with_sonar" = "xyes"; then
  SONAR_OBJ="sonardevice.o"
  AC_DEFINE(INCLUDE_SONAR,1,[include the sonar driver])
fi
AC_SUBST(SONAR_OBJ)

AC_ARG_WITH(vision, [  --without-vision          Do not include vision driver],,
with_vision=yes)
if test "x$with_vision" = "xyes"; then
  VISION_OBJ="visiondevice.o"
  AC_DEFINE(INCLUDE_VISION,1,[include the vision driver])
fi
AC_SUBST(VISION_OBJ)

AC_ARG_WITH(position, [  --without-position          Do not include position driver],,
with_position=yes)
if test "x$with_position" = "xyes"; then
  POSITION_OBJ="positiondevice.o"
  AC_DEFINE(INCLUDE_POSITION,1,[include the position driver])
fi
AC_SUBST(POSITION_OBJ)

AC_ARG_WITH(gripper, [  --without-gripper          Do not include gripper driver],,
with_gripper=yes)
if test "x$with_gripper" = "xyes"; then
  GRIPPER_OBJ="gripperdevice.o"
  AC_DEFINE(INCLUDE_GRIPPER,1,[include the gripper driver])
fi
AC_SUBST(GRIPPER_OBJ)

AC_ARG_WITH(misc, [  --without-misc          Do not include misc driver],,
with_misc=yes)
if test "x$with_misc" = "xyes"; then
  MISC_OBJ="miscdevice.o"
  AC_DEFINE(INCLUDE_MISC,1,[include the misc driver])
fi
AC_SUBST(MISC_OBJ)

AC_ARG_WITH(ptz, [  --without-ptz          Do not include ptz driver],,
with_ptz=yes)
if test "x$with_ptz" = "xyes"; then
  PTZ_OBJ="ptzdevice.o"
  AC_DEFINE(INCLUDE_PTZ,1,[include the ptz driver])
fi
AC_SUBST(PTZ_OBJ)

AC_ARG_WITH(audio, [  --with-audio          Include audio driver],,
with_audio=no)
if test "x$with_audio" = "xyes"; then
  AUDIO_OBJ="audiodevice.o"
  AC_DEFINE(INCLUDE_AUDIO,1,[include the audio driver])
fi
AC_SUBST(AUDIO_OBJ)

AC_ARG_WITH(laserbeacon, [  --without-laserbeacon          Do not include laserbeacon driver],,
with_laserbeacon=yes)
if test "x$with_laserbeacon" = "xyes"; then
  LASERBEACON_OBJ="laserbeacondevice.o"
  AC_DEFINE(INCLUDE_LASERBEACON,1,[include the laserbeacon driver])
fi
AC_SUBST(LASERBEACON_OBJ)

AC_ARG_WITH(broadcast, [  --without-broadcast          Do not include broadcast driver],,
with_broadcast=yes)
if test "x$with_broadcast" = "xyes"; then
  BROADCAST_OBJ="broadcastdevice.o"
  AC_DEFINE(INCLUDE_BROADCAST,1,[include the broadcast driver])
fi
AC_SUBST(BROADCAST_OBJ)

AC_ARG_WITH(speech, [  --without-speech          Do not include speech driver],,
with_speech=yes)
if test "x$with_speech" = "xyes"; then
  SPEECH_OBJ="speechdevice.o"
  AC_DEFINE(INCLUDE_SPEECH,1,[include the speech driver])
fi
AC_SUBST(SPEECH_OBJ)

AC_ARG_WITH(bps, [  --without-bps          Do not include bps driver],,
with_bps=yes)
if test "x$with_bps" = "xyes"; then
  BPS_OBJ="bpsdevice.o"
  AC_DEFINE(INCLUDE_BPS,1,[include the bps driver])
fi
AC_SUBST(BPS_OBJ)

if test "x$with_position" = "xyes" || \
   test "x$with_sonar" = "xyes" || \
   test "x$with_gripper" = "xyes" || \
   test "x$with_misc" = "xyes"; then
  P2OS_OBJ="p2osdevice.o packet.o robot_params.o sip.o"
fi
AC_SUBST(P2OS_OBJ)

AC_ARG_WITH(stage, [  --without-stage          Do not include stage driver],,
with_stage=yes)
if test "x$with_stage" = "xyes"; then
  STAGE_OBJ="stagedevice.o stagetime.o"
  AC_DEFINE(INCLUDE_STAGE,1,[include the stage driver])
fi
AC_SUBST(STAGE_OBJ)

dnl Checks for programs.
AC_PROG_CXX

dnl Checks for header files.
# AC_HEADER_DIRENT
#AC_HEADER_STDC
#AC_CHECK_HEADERS(fcntl.h limits.h strings.h sys/file.h sys/ioctl.h sys/time.h unistd.h)

dnl Checks for typedefs, structures, and compiler characteristics.
AC_TYPE_OFF_T
AC_TYPE_SIZE_T
AC_HEADER_TIME

dnl Checks for library functions.
AC_FUNC_MMAP
#AC_FUNC_SETPGRP
#AC_TYPE_SIGNAL
AC_CHECK_FUNCS(getcwd gethostname gettimeofday socket strdup strerror)

AC_OUTPUT(Makefile src/Makefile)
